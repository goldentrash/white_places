directive @embedded on OBJECT
directive @collection(name: String!) on OBJECT
directive @index(name: String!) on FIELD_DEFINITION
directive @resolver(
  name: String
  paginated: Boolean! = false
) on FIELD_DEFINITION
directive @relation(name: String) on FIELD_DEFINITION
directive @unique(index: String) on FIELD_DEFINITION
scalar Date

# The Long scalar type
# represents non-fractional signed whole numeric values.
# Long can represent values between -(2^63) and 2^63 - 1.
scalar Long

type Mutation {
  # Create a new document in the collection of 'Project'
  createProject(
    # 'Project' input values
    data: ProjectInput!
  ): Project!
  # Update an existing document in the collection of 'Project'
  updateProject(
    # The 'Project' document's ID
    id: ID!
    # 'Project' input values
    data: ProjectInput!
  ): Project
  # Delete an existing document in the collection of 'Project'
  deleteProject(
    # The 'Project' document's ID
    id: ID!
  ): Project
}

type Project {
  # The document's ID.
  _id: ID!
  # The document's timestamp.
  _ts: Long!
  title: String!
  summary: String!
}

# 'Project' input values
input ProjectInput {
  title: String!
  summary: String!
}

# The pagination object for elements of type 'Project'.
type ProjectPage {
  # The elements of type 'Project' in this page.
  data: [Project]!
  # A cursor for elements coming after the current page.
  after: String
  # A cursor for elements coming before the current page.
  before: String
}

type Query {
  # Find a document from the collection of 'Project' by its id.
  findProjectByID(
    # The 'Project' document's ID
    id: ID!
  ): Project
  projects(
    # The number of items to return per page.
    _size: Int
    # The pagination cursor.
    _cursor: String
  ): ProjectPage!
  project(title: String!): Project!
}

scalar Time
